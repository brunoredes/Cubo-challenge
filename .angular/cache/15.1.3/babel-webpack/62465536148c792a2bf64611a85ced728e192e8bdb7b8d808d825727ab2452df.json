{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CachePolicyInterceptor {\n  intercept(req, next) {\n    if (req.url.endsWith('.js') || req.url.endsWith('.css')) {\n      const modifiedRequest = req.clone({\n        headers: req.headers.set('Cache-Control', 'max-age=31536000')\n      });\n      return next.handle(modifiedRequest);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\nCachePolicyInterceptor.ɵfac = function CachePolicyInterceptor_Factory(t) {\n  return new (t || CachePolicyInterceptor)();\n};\nCachePolicyInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CachePolicyInterceptor,\n  factory: CachePolicyInterceptor.ɵfac\n});","map":{"version":3,"mappings":";AAUA,OAAM,MAAOA,sBAAsB;EAEjCC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAID,GAAG,CAACE,GAAG,CAACC,QAAQ,CAAC,KAAK,CAAC,IAAIH,GAAG,CAACE,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MACvD,MAAMC,eAAe,GAAGJ,GAAG,CAACK,KAAK,CAAC;QAChCC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,kBAAkB;OAC7D,CAAC;MACF,OAAON,IAAI,CAACO,MAAM,CAACJ,eAAe,CAAC;KACpC,MAAM;MACL,OAAOH,IAAI,CAACO,MAAM,CAACR,GAAG,CAAC;;EAE3B;;AAXWF,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAW,SAAtBX,sBAAsB;AAAA","names":["CachePolicyInterceptor","intercept","req","next","url","endsWith","modifiedRequest","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["D:\\Code\\cubo-challenge\\src\\app\\core\\interceptors\\cache-policy.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CachePolicyInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.endsWith('.js') || req.url.endsWith('.css')) {\r\n      const modifiedRequest = req.clone({\r\n        headers: req.headers.set('Cache-Control', 'max-age=31536000')\r\n      });\r\n      return next.handle(modifiedRequest);\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}